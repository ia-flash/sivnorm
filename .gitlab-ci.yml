# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python3 -V  # Print out python version for debugging
  - python3 -m venv venv
  - source venv/bin/activate
  - pip3 install -U pip

unit_test:
  stage: test
  script:
    - pip3 install -r requirements.txt
    - python3 -m unittest tests/test_app.py
  tags:
    - python-dinp-tscapx004r

build_wheel:
  stage: build
  script:
    - pip3 install wheel
    - python3 setup.py bdist_wheel
  artifacts:
    paths:
      - dist/*.whl
    expire_in: 1 week
  tags:
    - python-dinp-tscapx004r


upload_wheel:
  stage: deploy
  script:
    - pip3 install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/
  tags:
    - python-dinp-tscapx004r
  when: manual

pages:
  script:
    - pip3 install sphinx sphinx-rtd-theme
    - cd doc ; make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
